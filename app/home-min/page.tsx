"use client";
import Image from "next/image";
import { useMemo, useState } from "react";

/** ุฃููุงุน ุงูุนูุงุตุฑ ุฏุงุฎู ุงูููุถูุฉ */
type FavKind = "ุญูุงู" | "ุตุงููู" | "ูุฏููุฉ";

type FavoriteItem = {
  id: string;
  ุงูููุน: FavKind;
  ุงูุงุณู: string;
  ุงููููุน: string;
  ุงูุชูููู: number; // 0..5
  ุงูุตูุฑุฉ?: string; // ูุณุงุฑ ุงูุตูุฑุฉ ุฅู ููุฌุฏ
  ุนุฏุฏ_ุงูุญูุงููู?: number; // ููุตุงููู
  ุณููุงุช_ุงูุฎุจุฑุฉ?: number; // ููุญูุงู
  ุนุฏุฏ_ุงูุตุงูููุงุช?: number; // ูููุฏููุฉ
};

/** ุจูุงูุงุช ููููุฉ ููุชุฌุฑุจุฉ */
const SEED: FavoriteItem[] = [
  {
    id: "br1",
    ุงูููุน: "ุญูุงู",
    ุงูุงุณู: "ููุณู ุงูุญูุงู",
    ุงููููุน: "ุจุงูุชุงูุ ุจุงุฑูุณ",
    ุงูุชูููู: 4.7,
    ุณููุงุช_ุงูุฎุจุฑุฉ: 6,
  },
  {
    id: "sl1",
    ุงูููุน: "ุตุงููู",
    ุงูุงุณู: "ุตุงููู ุงูุฑุงุญุฉ",
    ุงููููุน: "6 Rue Souton 93500",
    ุงูุชูููู: 4.5,
    ุนุฏุฏ_ุงูุญูุงููู: 5,
  },
  {
    id: "ct1",
    ุงูููุน: "ูุฏููุฉ",
    ุงูุงุณู: "ุจุงูุชุงู",
    ุงููููุน: "รle-de-France",
    ุงูุชูููู: 4.2,
    ุนุฏุฏ_ุงูุตุงูููุงุช: 18,
  },
  {
    id: "sl2",
    ุงูููุน: "ุตุงููู",
    ุงูุงุณู: "Salon ProCut",
    ุงููููุน: "Le Prรฉ-Saint-Gervais",
    ุงูุชูููู: 4.9,
    ุนุฏุฏ_ุงูุญูุงููู: 7,
  },
];

const TABS: FavKind[] | ["ุงููู"] = ["ุญูุงู", "ุตุงููู", "ูุฏููุฉ", "ุงููู"] as any;

/** ููููู ุจุทุงูุฉ ููุญูุฏุฉ ุงูููุงุณ */
function FavoriteCard({
  item,
  onRemove,
  onBook,
  onOpen,
  onMap,
}: {
  item: FavoriteItem;
  onRemove: (id: string) => void;
  onBook: (id: string) => void;
  onOpen: (id: string) => void;
  onMap: (id: string) => void;
}) {
  const {
    id,
    ุงูููุน,
    ุงูุงุณู,
    ุงููููุน,
    ุงูุชูููู,
    ุงูุตูุฑุฉ,
    ุนุฏุฏ_ุงูุญูุงููู,
    ุณููุงุช_ุงูุฎุจุฑุฉ,
    ุนุฏุฏ_ุงูุตุงูููุงุช,
  } = item;

  /** ุณุทุฑ ูุตู ุฅุถุงูู ุญุณุจ ุงูููุน */
  const secondaryLine =
    ุงูููุน === "ุตุงููู"
      ? `ุนุฏุฏ ุงูุญูุงููู: ${ุนุฏุฏ_ุงูุญูุงููู ?? 0}`
      : ุงูููุน === "ุญูุงู"
      ? `ุณููุงุช ุงูุฎุจุฑุฉ: ${ุณููุงุช_ุงูุฎุจุฑุฉ ?? 0}`
      : `ุนุฏุฏ ุงูุตุงูููุงุช: ${ุนุฏุฏ_ุงูุตุงูููุงุช ?? 0}`;

  return (
    <div className="w-full bg-[#111111] rounded-8 p-3 flex gap-3 items-center shadow-soft">
      {/* ุงูุตูุฑุฉ (ุจูุงุณููููุฏุฑ ููุญูุฏ) */}
      <div className="relative w-16 h-16 rounded-8 overflow-hidden bg-[#1F1F1F] shrink-0">
        <Image
          src={ุงูุตูุฑุฉ ?? "/assets/logo.svg"}
          alt={`${ุงูุงุณู} - ุตูุฑุฉ`}
          fill
          sizes="64px"
          className="object-contain p-2"
        />
      </div>

      {/* ุงููุตูุต */}
      <div className="flex-1 min-w-0">
        <div className="flex items-center gap-2">
          <span className="text-sm px-2 py-0.5 bg-[#222] rounded-8">{ุงูููุน}</span>
          <span className="text-xs text-[#FBBF24]">โ {ุงูุชูููู.toFixed(1)}</span>
        </div>
        <div className="font-medium mt-1 truncate">{ุงูุงุณู}</div>
        <div className="text-sm text-[#9CA3AF] truncate">{ุงููููุน}</div>
        <div className="text-xs text-[#D1D5DB] mt-0.5">{secondaryLine}</div>

        {/* ุงูุฃุฒุฑุงุฑ */}
        <div className="flex flex-wrap gap-2 mt-3">
          {(ุงูููุน === "ุญูุงู" || ุงูููุน === "ุตุงููู") && (
            <button
              onClick={() => onBook(id)}
              className="h-9 px-3 rounded-8 bg-blue-600 hover:bg-blue-500 text-white"
            >
              ุญุฌุฒ
            </button>
          )}

          {ุงูููุน === "ูุฏููุฉ" && (
            <button
              onClick={() => onOpen(id)}
              className="h-9 px-3 rounded-8 bg-[#1F2937] hover:bg-[#374151] text-white"
            >
              ุนุฑุถ
            </button>
          )}

          <button
            onClick={() => onMap(id)}
            className="h-9 px-3 rounded-8 bg-[#1F1F1F] hover:bg-[#2A2A2A] text-white border border-white/10"
          >
            ๐ ุนุฑุถ ุนูู ุงูุฎุฑูุทุฉ
          </button>

          <button
            onClick={() => onRemove(id)}
            className="h-9 px-3 rounded-8 bg-[#DC2626] hover:bg-[#EF4444] text-white"
          >
            ุฅุฒุงูุฉ ูู ุงูููุถูุฉ
          </button>
        </div>
      </div>
    </div>
  );
}

export default function FavoritesPage() {
  const [activeTab, setActiveTab] = useState<"ุญูุงู" | "ุตุงููู" | "ูุฏููุฉ" | "ุงููู">(
    "ุงููู"
  );
  const [items, setItems] = useState<FavoriteItem[]>(SEED);

  const filtered = useMemo(() => {
    if (activeTab === "ุงููู") return items;
    return items.filter((i) => i.ุงูููุน === activeTab);
  }, [activeTab, items]);

  const removeItem = (id: string) => {
    setItems((prev) => prev.filter((i) => i.id !== id));
  };
  const bookItem = (id: string) => {
    console.log("ุญุฌุฒ:", id);
    alert("ุฌุงุฑู ูุชุญ ุตูุญุฉ ุงูุญุฌุฒโฆ");
  };
  const openItem = (id: string) => {
    console.log("ูุชุญ:", id);
    alert("ุฌุงุฑู ูุชุญ ุงูุชูุงุตููโฆ");
  };
  const mapItem = (id: string) => {
    console.log("ุฎุฑูุทุฉ:", id);
    alert("ุฌุงุฑู ูุชุญ ุงูุฎุฑูุทุฉโฆ");
  };

  return (
    <main className="mx-auto max-w-md min-h-screen text-white">
      {/* Header ููุงุซู ููููู */}
      <header className="w-full h-14 bg-[#111111] flex items-center justify-between px-4">
        <button className="h-6 px-2 rounded-8 bg-[#222222]">๐</button>
        <div className="flex-1 flex justify-center">
          <Image src="/assets/logo.svg" alt="ุดุนุงุฑ" width={96} height={32} />
        </div>
        <button className="h-6 px-2 rounded-8 bg-[#222222]">๐</button>
      </header>

      {/* ุดุฑูุท ุชููู (ุชุจููุจุงุช) */}
      <nav className="bg-[#0E0E0E] px-3 py-3 sticky top-0 z-10">
        <div className="grid grid-cols-4 gap-2">
          {TABS.map((tab: any) => {
            const selected = activeTab === tab;
            return (
              <button
                key={tab}
                onClick={() => setActiveTab(tab)}
                className={`h-10 rounded-8 text-sm ${
                  selected
                    ? "bg-white text-black"
                    : "bg-[#1F1F1F] text-white hover:bg-[#2A2A2A]"
                }`}
              >
                {tab}
              </button>
            );
          })}
        </div>
      </nav>

      {/* ุนููุงู */}
      <div className="px-4 mt-4 mb-2">
        <h1 className="text-xl font-semibold">ุงูููุถูุฉ</h1>
      </div>

      {/* ูุงุฆูุฉ ุงูุนูุงุตุฑ */}
      <section className="px-4 pb-8 space-y-3">
        {filtered.length === 0 ? (
          <div className="mt-10 text-center text-[#9CA3AF]">
            ูู ุชูู ุจุฅุถุงูุฉ ุฃู ููุถููู ุจุนุฏ
          </div>
        ) : (
          filtered.map((item) => (
            <FavoriteCard
              key={item.id}
              item={item}
              onRemove={removeItem}
              onBook={bookItem}
              onOpen={openItem}
              onMap={mapItem}
            />
          ))
        )}
      </section>
    </main>
  );
}
